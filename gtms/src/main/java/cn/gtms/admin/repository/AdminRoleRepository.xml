<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.gtms.admin.repository.AdminRoleRepository">


	<resultMap id="adminRoleMap" type="cn.gtms.admin.entity.AdminRole">
		<id column="role_id" property="roleId" />		<!-- 角色id -->
		<result column="role_name" property="roleName" />		<!-- 角色名 -->
		<result column="utc_create" property="utcCreate" />		<!-- 创建时间 -->
		<result column="utc_update" property="utcUpdate" />		<!-- 更新时间 -->
		<result column="create_by" property="createBy" />		<!-- 创建人 -->
		<result column="update_by" property="updateBy" />		<!-- 更新人 -->
		<result column="note" property="note" />		<!-- 备注 -->
	</resultMap>
	<sql id="allColumns">
		role_id,role_name,utc_create,utc_update,create_by,update_by,note
	</sql>
	<sql id="columns">
		role_name,utc_create,utc_update,create_by,update_by,note
	</sql>
	<sql id="table">
		gtms_admin_role 
	</sql>
	<sql id="condition">
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="roleId != null">
				AND role_id = #{roleId}
			</if>
			<if test="roleName != null">
				AND role_name = #{roleName}
			</if>
			<if test="utcCreate != null">
				AND utc_create = #{utcCreate}
			</if>
			<if test="utcUpdate != null">
				AND utc_update = #{utcUpdate}
			</if>
			<if test="createBy != null">
				AND create_by = #{createBy}
			</if>
			<if test="updateBy != null">
				AND update_by = #{updateBy}
			</if>
			<if test="note != null">
				AND note = #{note}
			</if>
		</trim>
	</sql>
	<sql id="conditionPK">
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
				AND role_id = #{roleId}
		</trim>
	</sql>
	<sql id="moreConditionPK">
		WHERE role_id in
		<trim prefix="(" suffix=")">
			<foreach collection="ids" item="item" separator=",">
				#{item}
			</foreach>
		</trim>
	</sql>
	
	<insert id="save" parameterType="cn.gtms.admin.entity.AdminRole" databaseId="oracle">
		insert into
		<include refid="table" />
		(<include refid="allColumns" />)
		values
		(#{roleId},#{roleName,jdbcType=VARCHAR},#{utcCreate,jdbcType=TIMESTAMP},#{utcUpdate,jdbcType=TIMESTAMP},#{createBy,jdbcType=NUMERIC},
		#{updateBy,jdbcType=NUMERIC},#{note,jdbcType=VARCHAR}
		)
		<selectKey keyProperty="roleId" order="BEFORE" resultType="java.lang.Long">
			select
			seq_gtms_admin_role_id.nextval
			from dual
		</selectKey>
	</insert>
	
	<insert id="save" parameterType="cn.gtms.admin.entity.AdminRole" useGeneratedKeys="true"  keyProperty="roleId" >
		insert into
		<include refid="table" />
		(<include refid="columns" />)
		values
		(#{roleName,jdbcType=VARCHAR},#{utcCreate,jdbcType=TIMESTAMP},#{utcUpdate,jdbcType=TIMESTAMP},#{createBy,jdbcType=NUMERIC},
		#{updateBy,jdbcType=NUMERIC},#{note,jdbcType=VARCHAR}
		)
	</insert>
	
	<insert id="saveList" parameterType="java.util.List">
		insert into
		<include refid="table" />
		(
		<include refid="columns" />
		)
		values
		<foreach collection="list" item="item" index="index" separator=",">	
		(#{item.roleName,jdbcType=VARCHAR},#{item.utcCreate,jdbcType=TIMESTAMP},#{item.utcUpdate,jdbcType=TIMESTAMP},#{item.createBy,jdbcType=NUMERIC},
		#{item.updateBy,jdbcType=NUMERIC},#{item.note,jdbcType=VARCHAR}
		)
		</foreach>
	</insert>
	
	
	<update id="update" parameterType="cn.gtms.admin.entity.AdminRole">
		update
		<include refid="table" />
		<set>
			<if test="roleName != null">
				role_name = #{roleName},
			</if>
			<if test="utcCreate != null">
				utc_create = #{utcCreate},
			</if>
			<if test="utcUpdate != null">
				utc_update = #{utcUpdate},
			</if>
			<if test="createBy != null">
				create_by = #{createBy},
			</if>
			<if test="updateBy != null">
				update_by = #{updateBy},
			</if>
			<if test="note != null">
				note = #{note},
			</if>
		</set>
		<include refid="conditionPK" />
	</update>
	
	<update id="updateAll" parameterType="cn.gtms.admin.entity.AdminRole">
		update
		<include refid="table" />
		<set>
			role_name = #{roleName},
			utc_create = #{utcCreate},
			utc_update = #{utcUpdate},
			create_by = #{createBy},
			update_by = #{updateBy},
			note = #{note}
		</set>
		<include refid="conditionPK" />
	</update>
	
	<update id="updateList" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="" close="" separator=";">  
         update
         	<include refid="table" />
			<set>
				<if test="item.roleName != null">
					role_name = #{item.roleName},
				</if>
				<if test="item.utcCreate != null">
					utc_create = #{item.utcCreate},
				</if>
				<if test="item.utcUpdate != null">
					utc_update = #{item.utcUpdate},
				</if>
				<if test="item.createBy != null">
					create_by = #{item.createBy},
				</if>
				<if test="item.updateBy != null">
					update_by = #{item.updateBy},
				</if>
				<if test="item.note != null">
					note = #{item.note}
				</if>
			</set>
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
				AND role_id = #{item.roleId}
			</trim>
         </foreach>  
	</update>
	
	
	<delete id="remove" parameterType="cn.gtms.admin.entity.AdminRole">
		delete from
		<include refid="table" />
		<include refid="condition" />
	</delete>
	<delete id="removeAll">
		delete from
		<include refid="table" />
	</delete>
	
	<delete id="delete" parameterType="Long">
		delete from
		<include refid="table" />
		<include refid="conditionPK" />
	</delete>
	<delete id="deleteByIds" parameterType="list">
		delete from
		<include refid="table" />
		<include refid="moreConditionPK" />
	</delete>
	<select id="get" resultMap="adminRoleMap" parameterType="Long">
		select
		<include refid="allColumns" />
		from
		<include refid="table" />
		<include refid="conditionPK" />
	</select>
	<select id="load" resultMap="adminRoleMap" parameterType="cn.gtms.admin.entity.AdminRole">
		select
		<include refid="allColumns" />
		from
		<include refid="table" />
		<include refid="conditionPK" />
	</select>
	<select id="getOne" resultMap="adminRoleMap"
		parameterType="cn.gtms.admin.entity.AdminRole">
		select
		<include refid="allColumns" />
		from
		<include refid="table" />
		<include refid="condition" />
	</select>
	<select id="count" resultType="java.lang.Integer"
		parameterType="cn.gtms.admin.entity.AdminRole">
		select
		count(1)
		from
		<include refid="table" />
		<include refid="condition" />
	</select>

	<select id="countAll" resultType="java.lang.Integer">
		select
		count(1)
		from
		<include refid="table" />
	</select>

	<select id="exists" parameterType="Long" resultType="java.lang.Boolean">
		select
		1
		from
		<include refid="table" />
		<include refid="conditionPK" />
	</select>

	<select id="findAll" resultMap="adminRoleMap">
		select
		<include refid="allColumns" />
		from
		<include refid="table" />
	</select>
	<select id="find" resultMap="adminRoleMap" parameterType="cn.gtms.admin.entity.AdminRole">
		select
		<include refid="allColumns" />
		from
		<include refid="table" />
		<include refid="condition" />
	</select>

	<select id="findByMap" parameterType="java.util.Map" resultMap="adminRoleMap">
		select
		<include refid="allColumns" />
		from
		<include refid="table" />
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<foreach collection="map.keys" item="key">
				<if test="map[key] != null and !map[key].equals('')">
					AND ${key} = #{map[${key}]}
				</if>
			</foreach>
		</trim>
	</select>

	<select id="findByList" parameterType="java.util.List"
		resultMap="adminRoleMap">
		select
		<include refid="allColumns" />
		from
		<include refid="table" />
		<include refid="moreConditionPK" />
	</select>
	
	<select id="findByCriteria" parameterType="java.util.Map" resultMap="adminRoleMap">
		select
		<include refid="allColumns" />
		from
		<include refid="table" />
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<foreach collection="list" item="item" index="index">
				<choose> 
					<when test="item.op == 'in'">
						AND ${item.field} ${item.op}
						<foreach item="obj" collection="item.value" index="idx" open="(" separator="," close=")">
							#{list[${index}].value[${idx}]}
			        	</foreach>
					</when>
					<when test="item.op == 'not in'">
						AND ifnull(${item.field},'-linkgoo') ${item.op}
						<foreach item="obj" collection="item.value" index="idx" open="(" separator="," close=")">
							#{list[${index}].value[${idx}]}
			        	</foreach>
					</when>
					<otherwise>
						AND ${item.field} ${item.op} #{list[${index}].value}
					</otherwise> 
				</choose>
			</foreach>
		</trim>
	</select>
	
	
	<select id="queryByCriteria" parameterType="java.util.Map" resultMap="adminRoleMap">
		select
		<include refid="allColumns" />
		from
		<include refid="table" />
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<foreach collection="list" item="item" index="index">
				<choose> 
					<when test="item.op == 'in'">
						AND ${item.field} ${item.op}
						<foreach item="obj" collection="item.value" index="idx" open="(" separator="," close=")">
							#{list[${index}].value[${idx}]}
			        	</foreach>
					</when>
					<when test="item.op == 'not in'">
						AND ifnull(${item.field},'-linkgoo') ${item.op}
						<foreach item="obj" collection="item.value" index="idx" open="(" separator="," close=")">
							#{list[${index}].value[${idx}]}
			        	</foreach>
					</when>
					<otherwise>
						AND ${item.field} ${item.op} #{list[${index}].value}
					</otherwise> 
				</choose>
			</foreach>
		</trim>
	</select>
	
	<select id="queryByMap" parameterType="java.util.Map" resultMap="adminRoleMap">
		select
		<include refid="allColumns" />
		from
		<include refid="table" />
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<foreach collection="map.keys" item="key">
				<if test="map[key] != null and !map[key].equals('')">
					AND ${key} = #{map[${key}]}
				</if>
			</foreach>
		</trim>
	</select>
	
	<select id="query" resultMap="adminRoleMap" parameterType="cn.gtms.admin.entity.AdminRole">
		select
		<include refid="allColumns" />
		from
		<include refid="table" />
		<include refid="condition" />
	</select>
</mapper>